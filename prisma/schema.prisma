generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserSex {
  MALE
  FEMALE
}

enum Day {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

enum StaffRole {
  ADMIN
  NURSE
  CAREGIVER
}

enum CareLevel {
  LOW
  MEDIUM
  HIGH
}

model Admin {
  id       String      @id
  username String      @unique
  name     String
  surname  String
  email    String?     @unique
  phone    String?     @unique
  tasks    AdminTask[]
}

model AdminTask {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  assigneeId  String
  assignee    Admin    @relation(fields: [assigneeId], references: [id])
}

model Staff {
  id       String      @id
  username String      @unique
  name     String
  surname  String
  email    String?     @unique
  phone    String?     @unique
  role     StaffRole
  tasks    StaffTask[]
}

model StaffTask {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  assigneeId  String
  assignee    Staff     @relation(fields: [assigneeId], references: [id])
  residentId  String?
  resident    Resident? @relation(fields: [residentId], references: [id])
}

model Resident {
  id                    String       @id
  fullName              String
  email                 String?      @unique
  phone                 String
  address               String
  dateOfBirth           DateTime
  careLevel             CareLevel
  emergencyContactName  String
  emergencyContactPhone String
  emergencyContactEmail String?
  familyId              String
  roomId                Int?
  family                FamilyMember @relation(fields: [familyId], references: [id])
  room                  Room?        @relation(fields: [roomId], references: [id])
  carePlans             CarePlan[]
  medicalRecords        MedicalRecord[]
  tasks                 StaffTask[]
}

model FamilyMember {
  id        String     @id
  username  String     @unique
  name      String
  surname   String
  email     String?    @unique
  phone     String
  address   String
  residents Resident[]
}

model Room {
  id             Int             @id @default(autoincrement())
  name           String          @unique
  capacity       Int
  residents      Resident[]
  routines       CareRoutine[]
  events         Event[]
  announcements  Announcement[]
}

model CarePlan {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  startDate   DateTime
  endDate     DateTime
  residentId  String
  resident    Resident @relation(fields: [residentId], references: [id])
}

model MedicalRecord {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  date        DateTime
  residentId  String
  resident    Resident @relation(fields: [residentId], references: [id])
}

model CareRoutine {
  id        Int      @id @default(autoincrement())
  name      String
  day       Day
  startTime DateTime
  endTime   DateTime
  roomId    Int?
  room      Room?    @relation(fields: [roomId], references: [id])
  category  String   @default("General")
}

model Event {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  startTime   DateTime
  endTime     DateTime
  roomId      Int?
  room        Room?    @relation(fields: [roomId], references: [id])
}

model Announcement {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  date        DateTime
  roomId      Int?
  room        Room?    @relation(fields: [roomId], references: [id])
}
